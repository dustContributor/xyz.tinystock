/*
 * This file is generated by jOOQ.
 */
package xyz.tinystock.database;


import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.UInteger;

import xyz.tinystock.database.tables.Component;
import xyz.tinystock.database.tables.Customer;
import xyz.tinystock.database.tables.Order;
import xyz.tinystock.database.tables.OrderDetail;
import xyz.tinystock.database.tables.Stock;
import xyz.tinystock.database.tables.User;
import xyz.tinystock.database.tables.records.ComponentRecord;
import xyz.tinystock.database.tables.records.CustomerRecord;
import xyz.tinystock.database.tables.records.OrderDetailRecord;
import xyz.tinystock.database.tables.records.OrderRecord;
import xyz.tinystock.database.tables.records.StockRecord;
import xyz.tinystock.database.tables.records.UserRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>stockdb</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ComponentRecord, UInteger> IDENTITY_COMPONENT = Identities0.IDENTITY_COMPONENT;
    public static final Identity<CustomerRecord, UInteger> IDENTITY_CUSTOMER = Identities0.IDENTITY_CUSTOMER;
    public static final Identity<OrderRecord, UInteger> IDENTITY_ORDER = Identities0.IDENTITY_ORDER;
    public static final Identity<UserRecord, UInteger> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ComponentRecord> KEY_COMPONENT_PRIMARY = UniqueKeys0.KEY_COMPONENT_PRIMARY;
    public static final UniqueKey<ComponentRecord> KEY_COMPONENT_COMPONENT_UN = UniqueKeys0.KEY_COMPONENT_COMPONENT_UN;
    public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY = UniqueKeys0.KEY_CUSTOMER_PRIMARY;
    public static final UniqueKey<OrderRecord> KEY_ORDER_PRIMARY = UniqueKeys0.KEY_ORDER_PRIMARY;
    public static final UniqueKey<StockRecord> KEY_STOCK_PRIMARY = UniqueKeys0.KEY_STOCK_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_USER_UN = UniqueKeys0.KEY_USER_USER_UN;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<OrderRecord, CustomerRecord> ORDER_CUSTOMER_FK = ForeignKeys0.ORDER_CUSTOMER_FK;
    public static final ForeignKey<OrderDetailRecord, OrderRecord> ORDER_DETAIL_ORDER_FK = ForeignKeys0.ORDER_DETAIL_ORDER_FK;
    public static final ForeignKey<OrderDetailRecord, ComponentRecord> ORDER_DETAIL_COMPONENT_FK = ForeignKeys0.ORDER_DETAIL_COMPONENT_FK;
    public static final ForeignKey<StockRecord, ComponentRecord> STOCK_COMPONENT_FK = ForeignKeys0.STOCK_COMPONENT_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ComponentRecord, UInteger> IDENTITY_COMPONENT = Internal.createIdentity(Component.COMPONENT, Component.COMPONENT.ID);
        public static Identity<CustomerRecord, UInteger> IDENTITY_CUSTOMER = Internal.createIdentity(Customer.CUSTOMER, Customer.CUSTOMER.ID);
        public static Identity<OrderRecord, UInteger> IDENTITY_ORDER = Internal.createIdentity(Order.ORDER, Order.ORDER.ID);
        public static Identity<UserRecord, UInteger> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ComponentRecord> KEY_COMPONENT_PRIMARY = Internal.createUniqueKey(Component.COMPONENT, "KEY_COMPONENT_PRIMARY", Component.COMPONENT.ID);
        public static final UniqueKey<ComponentRecord> KEY_COMPONENT_COMPONENT_UN = Internal.createUniqueKey(Component.COMPONENT, "KEY_COMPONENT_COMPONENT_UN", Component.COMPONENT.CODE);
        public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY = Internal.createUniqueKey(Customer.CUSTOMER, "KEY_CUSTOMER_PRIMARY", Customer.CUSTOMER.ID);
        public static final UniqueKey<OrderRecord> KEY_ORDER_PRIMARY = Internal.createUniqueKey(Order.ORDER, "KEY_ORDER_PRIMARY", Order.ORDER.ID);
        public static final UniqueKey<StockRecord> KEY_STOCK_PRIMARY = Internal.createUniqueKey(Stock.STOCK, "KEY_STOCK_PRIMARY", Stock.STOCK.ID_COMPONENT);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_USER_PRIMARY", User.USER.ID);
        public static final UniqueKey<UserRecord> KEY_USER_USER_UN = Internal.createUniqueKey(User.USER, "KEY_USER_USER_UN", User.USER.NAME);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<OrderRecord, CustomerRecord> ORDER_CUSTOMER_FK = Internal.createForeignKey(xyz.tinystock.database.Keys.KEY_CUSTOMER_PRIMARY, Order.ORDER, "ORDER_CUSTOMER_FK", Order.ORDER.ID_CUSTOMER);
        public static final ForeignKey<OrderDetailRecord, OrderRecord> ORDER_DETAIL_ORDER_FK = Internal.createForeignKey(xyz.tinystock.database.Keys.KEY_ORDER_PRIMARY, OrderDetail.ORDER_DETAIL, "ORDER_DETAIL_ORDER_FK", OrderDetail.ORDER_DETAIL.ID_ORDER);
        public static final ForeignKey<OrderDetailRecord, ComponentRecord> ORDER_DETAIL_COMPONENT_FK = Internal.createForeignKey(xyz.tinystock.database.Keys.KEY_COMPONENT_PRIMARY, OrderDetail.ORDER_DETAIL, "ORDER_DETAIL_COMPONENT_FK", OrderDetail.ORDER_DETAIL.ID_COMPONENT);
        public static final ForeignKey<StockRecord, ComponentRecord> STOCK_COMPONENT_FK = Internal.createForeignKey(xyz.tinystock.database.Keys.KEY_COMPONENT_PRIMARY, Stock.STOCK, "STOCK_COMPONENT_FK", Stock.STOCK.ID_COMPONENT);
    }
}
