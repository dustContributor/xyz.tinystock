/*
 * This file is generated by jOOQ.
*/
package xyz.tinystock.database.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;

import xyz.tinystock.database.tables.Order;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderRecord extends UpdatableRecordImpl<OrderRecord> implements Record7<UInteger, Timestamp, Timestamp, String, String, UInteger, UInteger> {

    private static final long serialVersionUID = 1964391006;

    /**
     * Setter for <code>stockdb.ORDER.ID</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>stockdb.ORDER.ID</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>stockdb.ORDER.CREATED_DATE</code>.
     */
    public void setCreatedDate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>stockdb.ORDER.CREATED_DATE</code>.
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>stockdb.ORDER.DELIVERED_DATE</code>.
     */
    public void setDeliveredDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>stockdb.ORDER.DELIVERED_DATE</code>.
     */
    public Timestamp getDeliveredDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>stockdb.ORDER.COMMENT</code>.
     */
    public void setComment(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>stockdb.ORDER.COMMENT</code>.
     */
    public String getComment() {
        return (String) get(3);
    }

    /**
     * Setter for <code>stockdb.ORDER.COMPLAINT</code>.
     */
    public void setComplaint(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>stockdb.ORDER.COMPLAINT</code>.
     */
    public String getComplaint() {
        return (String) get(4);
    }

    /**
     * Setter for <code>stockdb.ORDER.ID_STATE</code>.
     */
    public void setIdState(UInteger value) {
        set(5, value);
    }

    /**
     * Getter for <code>stockdb.ORDER.ID_STATE</code>.
     */
    public UInteger getIdState() {
        return (UInteger) get(5);
    }

    /**
     * Setter for <code>stockdb.ORDER.ID_CUSTOMER</code>.
     */
    public void setIdCustomer(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>stockdb.ORDER.ID_CUSTOMER</code>.
     */
    public UInteger getIdCustomer() {
        return (UInteger) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<UInteger, Timestamp, Timestamp, String, String, UInteger, UInteger> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<UInteger, Timestamp, Timestamp, String, String, UInteger, UInteger> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Order.ORDER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Order.ORDER.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Order.ORDER.DELIVERED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Order.ORDER.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Order.ORDER.COMPLAINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field6() {
        return Order.ORDER.ID_STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field7() {
        return Order.ORDER.ID_CUSTOMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getDeliveredDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getComplaint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component6() {
        return getIdState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component7() {
        return getIdCustomer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getDeliveredDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getComplaint();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value6() {
        return getIdState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value7() {
        return getIdCustomer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value2(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value3(Timestamp value) {
        setDeliveredDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value4(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value5(String value) {
        setComplaint(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value6(UInteger value) {
        setIdState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value7(UInteger value) {
        setIdCustomer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord values(UInteger value1, Timestamp value2, Timestamp value3, String value4, String value5, UInteger value6, UInteger value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderRecord
     */
    public OrderRecord() {
        super(Order.ORDER);
    }

    /**
     * Create a detached, initialised OrderRecord
     */
    public OrderRecord(UInteger id, Timestamp createdDate, Timestamp deliveredDate, String comment, String complaint, UInteger idState, UInteger idCustomer) {
        super(Order.ORDER);

        set(0, id);
        set(1, createdDate);
        set(2, deliveredDate);
        set(3, comment);
        set(4, complaint);
        set(5, idState);
        set(6, idCustomer);
    }
}
