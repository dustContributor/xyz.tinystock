/*
 * This file is generated by jOOQ.
 */
package xyz.tinystock.database.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;

import xyz.tinystock.database.tables.OrderDetail;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderDetailRecord extends TableRecordImpl<OrderDetailRecord> implements Record4<UInteger, UInteger, UInteger, UInteger> {

    private static final long serialVersionUID = -274361201;

    /**
     * Setter for <code>stockdb.ORDER_DETAIL.ID_ORDER</code>.
     */
    public void setIdOrder(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>stockdb.ORDER_DETAIL.ID_ORDER</code>.
     */
    public UInteger getIdOrder() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>stockdb.ORDER_DETAIL.ID_COMPONENT</code>.
     */
    public void setIdComponent(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>stockdb.ORDER_DETAIL.ID_COMPONENT</code>.
     */
    public UInteger getIdComponent() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>stockdb.ORDER_DETAIL.QUANTITY</code>.
     */
    public void setQuantity(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>stockdb.ORDER_DETAIL.QUANTITY</code>.
     */
    public UInteger getQuantity() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>stockdb.ORDER_DETAIL.TOTAL_PRICE</code>. In cents
     */
    public void setTotalPrice(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>stockdb.ORDER_DETAIL.TOTAL_PRICE</code>. In cents
     */
    public UInteger getTotalPrice() {
        return (UInteger) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, UInteger, UInteger, UInteger> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, UInteger, UInteger, UInteger> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return OrderDetail.ORDER_DETAIL.ID_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return OrderDetail.ORDER_DETAIL.ID_COMPONENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field3() {
        return OrderDetail.ORDER_DETAIL.QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field4() {
        return OrderDetail.ORDER_DETAIL.TOTAL_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getIdOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getIdComponent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component3() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component4() {
        return getTotalPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getIdOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getIdComponent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value3() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value4() {
        return getTotalPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderDetailRecord value1(UInteger value) {
        setIdOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderDetailRecord value2(UInteger value) {
        setIdComponent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderDetailRecord value3(UInteger value) {
        setQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderDetailRecord value4(UInteger value) {
        setTotalPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderDetailRecord values(UInteger value1, UInteger value2, UInteger value3, UInteger value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderDetailRecord
     */
    public OrderDetailRecord() {
        super(OrderDetail.ORDER_DETAIL);
    }

    /**
     * Create a detached, initialised OrderDetailRecord
     */
    public OrderDetailRecord(UInteger idOrder, UInteger idComponent, UInteger quantity, UInteger totalPrice) {
        super(OrderDetail.ORDER_DETAIL);

        set(0, idOrder);
        set(1, idComponent);
        set(2, quantity);
        set(3, totalPrice);
    }
}
