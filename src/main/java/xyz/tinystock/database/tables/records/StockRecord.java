/*
 * This file is generated by jOOQ.
*/
package xyz.tinystock.database.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;

import xyz.tinystock.database.tables.Stock;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StockRecord extends UpdatableRecordImpl<StockRecord> implements Record2<UInteger, UInteger> {

    private static final long serialVersionUID = -167234574;

    /**
     * Setter for <code>stockdb.STOCK.ID_COMPONENT</code>.
     */
    public void setIdComponent(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>stockdb.STOCK.ID_COMPONENT</code>.
     */
    public UInteger getIdComponent() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>stockdb.STOCK.QUANTITY</code>.
     */
    public void setQuantity(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>stockdb.STOCK.QUANTITY</code>.
     */
    public UInteger getQuantity() {
        return (UInteger) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, UInteger> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UInteger, UInteger> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Stock.STOCK.ID_COMPONENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Stock.STOCK.QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getIdComponent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getIdComponent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StockRecord value1(UInteger value) {
        setIdComponent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StockRecord value2(UInteger value) {
        setQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StockRecord values(UInteger value1, UInteger value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StockRecord
     */
    public StockRecord() {
        super(Stock.STOCK);
    }

    /**
     * Create a detached, initialised StockRecord
     */
    public StockRecord(UInteger idComponent, UInteger quantity) {
        super(Stock.STOCK);

        set(0, idComponent);
        set(1, quantity);
    }
}
